{"ast":null,"code":"var _jsxFileName = \"/home/jesusfrancomedinilla/react-lqpdho/src/Rug.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, useRef, useCallback } from 'react';\nimport anime from \"animejs\";\nimport Dice from './Dice';\nimport Layout from './Layout';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Rug = ({\n  cards,\n  cardProp\n}) => {\n  _s();\n\n  const [style, setStyles] = useState({});\n  const [dices, setDices] = useState([]);\n  const [user, setUser] = useState(1);\n  const callback = useCallback(count => {\n    setDices(new Array(count).fill(1).map((x, i) => x + i));\n    if (user == 1) setUser(2);else if (user == 2) setUser(1);\n  });\n  useEffect(() => {\n    console.log(user, 'user en cambio efect user');\n  }, [user]);\n  useEffect(() => {\n    console.log('detecto cambios en el dices');\n    anime({\n      targets: '.dice',\n      translateX: 50,\n      opacity: 1,\n      rotate: '1turn'\n    });\n  }, [dices]);\n  const parent = useRef(null); // useEffect(() => {}, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"parent-rug\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rug\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user user1\",\n          children: [/*#__PURE__*/_jsxDEV(Layout, {\n            parentCallback: callback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), \"Name\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrap-dices\",\n            style: {\n              display: 'flex',\n              flexDirection: 'row'\n            },\n            children: dices && user == 1 && dices.map((x, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dice\",\n              children: /*#__PURE__*/_jsxDEV(Dice, {\n                maxNum: 6\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user user2\",\n          style: {\n            opacity: 0.5\n          },\n          children: [/*#__PURE__*/_jsxDEV(Layout, {\n            parentCallback: callback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), \"Name\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrap-dices\",\n            style: {\n              display: 'flex',\n              flexDirection: 'row'\n            },\n            children: dices && user == 2 && dices.map((x, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dice\",\n              style: {\n                opacity: 0\n              },\n              children: /*#__PURE__*/_jsxDEV(Dice, {\n                maxNum: 6\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Rug, \"DQ+/4maJlBx5/dSJUm5DI9fqdgc=\");\n\n_c = Rug;\nexport default Rug;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rug\");","map":{"version":3,"sources":["/home/jesusfrancomedinilla/react-lqpdho/src/Rug.js"],"names":["React","useState","useEffect","useContext","useRef","useCallback","anime","Dice","Layout","Rug","cards","cardProp","style","setStyles","dices","setDices","user","setUser","callback","count","Array","fill","map","x","i","console","log","targets","translateX","opacity","rotate","parent","display","flexDirection"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useContext,\n  useRef,\n  useCallback\n} from 'react';\nimport anime  from \"animejs\"\nimport Dice from './Dice';\nimport Layout from './Layout';\nimport './style.css';\n\nconst Rug = ({ cards, cardProp }) => {\n  const [style, setStyles] = useState({});\n  const [dices, setDices] = useState([]);\n  const [user, setUser] = useState(1);\n\n  const callback = useCallback(count => {\n    setDices(new Array(count).fill(1).map((x, i) => x + i));\n\n    if (user == 1) setUser(2);\n    else if (user == 2) setUser(1);\n  });\n\n  useEffect(() => {\n    console.log(user, 'user en cambio efect user');\n  }, [user]);\n\n  useEffect(() => {\n    console.log('detecto cambios en el dices');\n    anime({\n      targets: '.dice',\n      translateX: 50,\n      opacity: 1,\n      rotate: '1turn'\n});\n\n  }, [dices]);\n\n  const parent = useRef(null);\n\n  // useEffect(() => {}, []);\n\n  return (\n    <div className=\"parent-rug\">\n      <div className=\"rug\">\n        <div className=\"users\">\n\n          <div className=\"user user1\">\n            <Layout parentCallback={callback} />\n            Name\n            <div\n              className=\"wrap-dices\"\n              style={{ display: 'flex', flexDirection: 'row' }}\n            >\n              {dices && user == 1 &&\n                dices.map((x, i) => (\n                  <div className=\"dice\" key={i}>\n                    <Dice maxNum={6} />\n                  </div>\n                ))}\n            </div>\n          </div>\n\n          <div className=\"user user2\" style={{opacity: 0.5}}>\n            <Layout parentCallback={callback} />\n            Name\n            <div\n              className=\"wrap-dices\"\n              style={{ display: 'flex', flexDirection: 'row' }}\n            >\n              {dices &&\n                user == 2 &&\n                dices.map((x, i) => (\n                  <div className=\"dice\" key={i} style={{opacity: 0}}>\n                    <Dice maxNum={6} />\n                  </div>\n                ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Rug;\n"]},"metadata":{},"sourceType":"module"}